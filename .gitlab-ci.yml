include:
  - template: ./.gitlab/.pipeline-template.yml

stages: [test, build, deploy]

prepare dependencies:
  stage: .pre
  image: node:20.9.0
  script:
    - npm install
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    # policy: push

test lint:
  stage: test
  image: node:20.9.0
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    # policy: pull
  script:
    - npm run lint
    - npm run build

unit test:
  stage: test
  image: node:20.9.0
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    # policy: pull
  script:
    - npm test auth # <=== Chỉ chạy test cho module auth do các module khác chưa có test

e2e test:
  stage: test
  image: node:20.9.0
  script:
    - echo "E2E test running"

build docker:
  stage: build
  image: docker:git
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - echo $CI_COMMIT_REF_SLUG # <=== Dùng để in
    - echo $CI_COMMIT_BRANCH # <=== Dùng để in ra tên branch
    - echo $CI_DEFAULT_BRANCH # <=== Dùng để in ra tên branch mặc định
    - | # <=== Dùng cho các script xuống hàng
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  only:
    - /^deploy\/.*$/
    - main
    - tags
# deploy staging:
#   stage: deploy
#   script:
#     - echo "Deploy to staging server"
#   only:
#     - deploy/staging

deploy staging:
  extends: .deploy
  variables:
    SERVER_IP: STAGING_SERVER_IP
    SSH_KEY: STAGING_SSH_KEY
    SSH_CMD: STAGING_SSH_CMD
    WORK_DIR: STAGING_WORK_DIR

deploy uat:
  extends: .deploy
  variables:
    SERVER_IP: UAT_SERVER_IP
    SSH_KEY: UAT_SSH_KEY
    SSH_CMD: UAT_SSH_CMD
    WORK_DIR: UAT_WORK_DIR
